#ifndef PROTOTYPE_H
#define PROTOTYPE_H
#include <iostream>
#include <fstream>
#include <sstream>
#include <iomanip>
#include <filesystem>
#include <cstdlib> // For std::getenv
#include <stdexcept> // For std::runtime_error
#include "TH2Poly.h"
#include "TCanvas.h"
#include "TColor.h"
#include "TROOT.h"
#include "TStyle.h"
#include "TH2Poly.h"
#include "TGraphAsymmErrors.h"


typedef std::map<char, const std::vector<std::array<Double_t, 4>>> CoordinateMap;

struct VFAT_hits
    {
    int vfat;
    int matchedHits;
    int propagatedHits;
    
    VFAT_hits(int i, int m, int p): vfat(i), matchedHits(m), propagatedHits(p) {}
    };
std::string chamberName(int station, int region, int chamber, int layer);
void SetPalette();

std::string TH1_output_name;
std::filesystem::path TH2_output_name;
std::string line,word;
std::vector<std::string> row;
std::vector<std::vector<std::string>> content;    
std::map<std::string,std::vector<VFAT_hits>> EfficiencyCollector;

bool isGE11;
bool isGE21;
bool isLong;
int moduleNumber;
std::string title;

const std::string letter[5]={"None","A","B","C","D"};

namespace GE11Geometry{
CoordinateMap MapShort = {
    {'x',{{{-3.83938562003834,-4.14080692494689,-12.4513908518566,-11.5450181214881}},
          {{-4.14080692494689,-4.44222822985544,-13.3577635822252,-12.4513908518566}},
          {{-4.44222822985544,-4.79536310569235,-14.4196388259069,-13.3577635822252}},
          {{-4.79536310569235,-5.14849798152926,-15.4815140695887,-14.4196388259069}},
          {{-5.14849798152926,-5.56365370199756,-16.7298857598484,-15.4815140695887}},
          {{-5.56365370199756,-5.97880942246586,-17.9782574501081,-16.7298857598484}},
          {{-5.97880942246586,-6.47069378786385,-19.4573518871341,-17.9782574501081}},
          {{-6.47069378786385,-6.96257815326184,-20.9364463241602,-19.4573518871341}},
          {{-3.83938562003834,-4.14080692494689,4.14080692494689,3.83938562003834}},
          {{-4.14080692494689,-4.44222822985544,4.44222822985544,4.14080692494689}},
          {{-4.44222822985544,-4.79536310569235,4.79536310569235,4.44222822985544}},
          {{-4.79536310569235,-5.14849798152926,5.14849798152926,4.79536310569235}},
          {{-5.14849798152926,-5.56365370199756,5.56365370199756,5.14849798152926}},
          {{-5.56365370199756,-5.97880942246586,5.97880942246586,5.56365370199756}},
          {{-5.97880942246586,-6.47069378786385,6.47069378786385,5.97880942246586}},
          {{-6.47069378786385,-6.96257815326184,6.96257815326184,6.47069378786385}},
          {{3.83938562003834,4.14080692494689,12.4513908518566,11.5450181214881}},
          {{4.14080692494689,4.44222822985544,13.3577635822252,12.4513908518566}},
          {{4.44222822985544,4.79536310569235,14.4196388259069,13.3577635822252}},
          {{4.79536310569235,5.14849798152926,15.4815140695887,14.4196388259069}},
          {{5.14849798152926,5.56365370199756,16.7298857598484,15.4815140695887}},
          {{5.56365370199756,5.97880942246586,17.9782574501081,16.7298857598484}},
          {{5.97880942246586,6.47069378786385,19.4573518871341,17.9782574501081}},
          {{6.47069378786385,6.96257815326184,20.9364463241602,19.4573518871341}}}
    },
    {'y',{{{0,10.206,10.206,0}},
          {{10.206,20.412,20.412,10.206}},
          {{20.412,32.369,32.369,20.412}},
          {{32.369,44.326,44.326,32.369}},
          {{44.326,58.383,58.383,44.326}},
          {{58.383,72.44,72.44,58.383}},
          {{72.4399999999999,89.0949999999999,89.0949999999999,72.4399999999999}},
          {{89.0949999999999,105.75,105.75,89.0949999999999}},
          {{0,10.206,10.206,0}},
          {{10.206,20.412,20.412,10.206}},
          {{20.412,32.369,32.369,20.412}},
          {{32.369,44.326,44.326,32.369}},
          {{44.326,58.383,58.383,44.326}},
          {{58.383,72.44,72.44,58.383}},
          {{72.4399999999999,89.0949999999999,89.0949999999999,72.4399999999999}},
          {{89.0949999999999,105.75,105.75,89.0949999999999}},
          {{0,10.206,10.206,0}},
          {{10.206,20.412,20.412,10.206}},
          {{20.412,32.369,32.369,20.412}},
          {{32.369,44.326,44.326,32.369}},
          {{44.326,58.383,58.383,44.326}},
          {{58.383,72.44,72.44,58.383}},
          {{72.4399999999999,89.0949999999999,89.0949999999999,72.4399999999999}},
          {{89.0949999999999,105.75,105.75,89.0949999999999}}}
    }
};

CoordinateMap MapLong = {
    {'y',{{{0,11.307,11.307,0}},
          {{11.307,22.614,22.614,11.307}},
          {{22.614,36.07,36.07,22.614}},
          {{36.07,49.526,49.526,36.07}},
          {{49.526,65.633,65.633,49.526}},
          {{65.633,81.74,81.74,65.633}},
          {{81.74,101.145,101.145,81.74}},
          {{101.145,120.55,120.55,101.145}},
          {{0,11.307,11.307,0}},
          {{11.307,22.614,22.614,11.307}},
          {{22.614,36.07,36.07,22.614}},
          {{36.07,49.526,49.526,36.07}},
          {{49.526,65.633,65.633,49.526}},
          {{65.633,81.74,81.74,65.633}},
          {{81.74,101.145,101.145,81.74}},
          {{101.145,120.55,120.55,101.145}},
          {{0,11.307,11.307,0}},
          {{11.307,22.614,22.614,11.307}},
          {{22.614,36.07,36.07,22.614}},
          {{36.07,49.526,49.526,36.07}},
          {{49.526,65.633,65.633,49.526}},
          {{65.633,81.74,81.74,65.633}},
          {{81.74,101.145,101.145,81.74}},
          {{101.145,120.55,120.55,101.145}}}
    },
    {'x', {{{-3.83938562003834,-4.17332356777506,-12.5491682745625,-11.5450181214881}},
           {{-4.17332356777506,-4.50726151551178,-13.5533184276368,-12.5491682745625}},
           {{-4.50726151551178,-4.90466746092129,-14.7483166110425,-13.5533184276368}},
           {{-4.90466746092129,-5.30207340633079,-15.9433147944483,-14.7483166110425}},
           {{-5.30207340633079,-5.77777328465355,-17.3737425397006,-15.9433147944483}},
           {{-5.77777328465355,-6.2534731629763,-18.804170284953,-17.3737425397006}},
           {{-6.2534731629763,-6.82657530110586,-20.5274862591644,-18.804170284953}},
           {{-6.82657530110586,-7.39967743923543,-22.2508022333757,-20.5274862591644}},
           {{-3.83938562003834,-4.17332356777506,4.17332356777506,3.83938562003834}},
           {{-4.17332356777506,-4.50726151551178,4.50726151551178,4.17332356777506}},
           {{-4.50726151551178,-4.90466746092129,4.90466746092129,4.50726151551178}},
           {{-4.90466746092129,-5.30207340633079,5.30207340633079,4.90466746092129}},
           {{-5.30207340633079,-5.77777328465355,5.77777328465355,5.30207340633079}},
           {{-5.77777328465355,-6.2534731629763,6.2534731629763,5.77777328465355}},
           {{-6.2534731629763,-6.82657530110586,6.82657530110586,6.2534731629763}},
           {{-6.82657530110586,-7.39967743923543,7.39967743923543,6.82657530110586}},
           {{3.83938562003834,4.17332356777506,12.5491682745625,11.5450181214881}},
           {{4.17332356777506,4.50726151551178,13.5533184276368,12.5491682745625}},
           {{4.50726151551178,4.90466746092129,14.7483166110425,13.5533184276368}},
           {{4.90466746092129,5.30207340633079,15.9433147944483,14.7483166110425}},
           {{5.30207340633079,5.77777328465355,17.3737425397006,15.9433147944483}},
           {{5.77777328465355,6.2534731629763,18.804170284953,17.3737425397006}},
           {{6.2534731629763,6.82657530110586,20.5274862591644,18.804170284953}},
           {{6.82657530110586,7.39967743923543,22.2508022333757,20.5274862591644}}}
    }
    };

//Additional dumb polygons to standardize Axis ranges
const std::array<Double_t, 4> shape_x = {-120.55/2,-120.55/2,120.55/2,120.55/2};
const std::array<Double_t, 4> shape_y = {125.,125.01,125.01,125.};
}

namespace GE21Geometry{
CoordinateMap MapM4 = {
	{'y',{
	{{50.204993724823,50.204993724823,68.588294506073,68.588294506073}},
	{{68.607581615448,68.607581615448,86.99091291427612,86.99091291427612}},
	{{50.204993724823,50.204993724823,68.588294506073,68.588294506073}},
	{{68.607581615448,68.607581615448,86.99091291427612,86.99091291427612}},
	{{50.204993724823,50.204993724823,68.588294506073,68.588294506073}},
	{{68.607581615448,68.607581615448,86.99091291427612,86.99091291427612}},
	{{50.204993724823,50.204993724823,68.588294506073,68.588294506073}},
	{{68.607581615448,68.607581615448,86.99091291427612,86.99091291427612}},
	{{50.204993724823,50.204993724823,68.588294506073,68.588294506073}},
	{{68.607581615448,68.607581615448,86.99091291427612,86.99091291427612}},
	{{50.204993724823,50.204993724823,68.588294506073,68.588294506073}},
	{{68.607581615448,68.607581615448,86.99091291427612,86.99091291427612}}}
	},
	{'x',{
	{{34.2309899003082,51.66410440307928,55.03959150111225,36.46748013073791}},
	{{36.470016587863356,55.043333806124124,58.41883882554374,38.706522183332076}},
	{{17.05306467657678,34.2309899003082,36.46748013073791,18.16723089435556}},
	{{18.16858066663021,36.470016587863356,38.706522183332076,19.28275982321896}},
	{{0.0008695312188634544,17.05306467657678,18.16723089435556,0.0009263422570982628}},
	{{0.0010994958577561953,18.16858066663021,19.28275982321896,0.0011669218933913076}},
	{{-17.05131922674503,0.0008695312188634544,0.0009263422570982628,-18.165371405125363}},
	{{-18.166373598242334,0.0010994958577561953,0.0011669218933913076,-19.280417407461904}},
	{{-34.22922509957341,-17.05131922674503,-18.165371405125363,-36.46560002630862}},
	{{-36.4677850508261,-18.166373598242334,-19.280417407461904,-38.70415379839791}},
	{{-51.66230670981973,-34.22922509957341,-36.46560002630862,-55.03767635511692}},
	{{-55.04106067745331,-36.4677850508261,-38.70415379839791,-58.41642629838981}}}
	}
};
CoordinateMap MapM3 = {
	{'y',{
	{{2.6937785148620605,2.6937785148620605,24.635596752166748,24.635596752166748}},
	{{24.654883861541748,24.654883861541748,46.59668684005737,46.59668684005737}},
	{{2.6937785148620605,2.6937785148620605,24.635596752166748,24.635596752166748}},
	{{24.654883861541748,24.654883861541748,46.59668684005737,46.59668684005737}},
	{{2.6937785148620605,2.6937785148620605,24.635596752166748,24.635596752166748}},
	{{24.654883861541748,24.654883861541748,46.59668684005737,46.59668684005737}},
	{{2.6937785148620605,2.6937785148620605,24.635596752166748,24.635596752166748}},
	{{24.654883861541748,24.654883861541748,46.59668684005737,46.59668684005737}},
	{{2.6937785148620605,2.6937785148620605,24.635596752166748,24.635596752166748}},
	{{24.654883861541748,24.654883861541748,46.59668684005737,46.59668684005737}},
	{{2.6937785148620605,2.6937785148620605,24.635596752166748,24.635596752166748}},
	{{24.654883861541748,24.654883861541748,46.59668684005737,46.59668684005737}}}
	},
	{'x',{
	{{28.45034084093099,42.93971563319832,46.96855830068025,31.119709871305474}},
	{{31.12234350705066,46.972405089456146,51.0012711487739,33.791735317054666}},
	{{14.173060379070504,28.45034084093099,31.119709871305474,15.502855640682576}},
	{{15.504296191755564,31.12234350705066,33.791735317054666,16.834113827910517}},
	{{0.0002757852645453198,14.173060379070504,15.502855640682576,0.0003016609701590744}},
	{{0.0005599464178880414,15.504296191755564,16.834113827910517,0.0006079735332501219}},
	{{-14.1725067826861,0.0002757852645453198,0.0003016609701590744,-15.502250102809944}},
	{{-15.503172185675199,0.0005599464178880414,0.0006079735332501219,-16.832893414802687}},
	{{-28.449781107125183,-14.1725067826861,-15.502250102809944,-31.11909762016447}},
	{{-31.121207039707368,-15.503172185675199,-16.832893414802687,-33.790501373870015}},
	{{-42.939145467048654,-28.449781107125183,-31.11909762016447,-46.967934638374935}},
	{{-46.97124744054889,-31.121207039707368,-33.790501373870015,-51.00001420726321}}}
	}
};
CoordinateMap MapM2 = {
	{'y',{
	{{-44.81743669509888,-44.81743669509888,-22.87561845779419,-22.87561845779419}},
	{{-22.85633134841919,-22.85633134841919,-0.914543628692627,-0.914543628692627}},
	{{-44.81743669509888,-44.81743669509888,-22.87561845779419,-22.87561845779419}},
	{{-22.85633134841919,-22.85633134841919,-0.914543628692627,-0.914543628692627}},
	{{-44.81743669509888,-44.81743669509888,-22.87561845779419,-22.87561845779419}},
	{{-22.85633134841919,-22.85633134841919,-0.914543628692627,-0.914543628692627}},
	{{-44.81743669509888,-44.81743669509888,-22.87561845779419,-22.87561845779419}},
	{{-22.85633134841919,-22.85633134841919,-0.914543628692627,-0.914543628692627}},
	{{-44.81743669509888,-44.81743669509888,-22.87561845779419,-22.87561845779419}},
	{{-22.85633134841919,-22.85633134841919,-0.914543628692627,-0.914543628692627}},
	{{-44.81743669509888,-44.81743669509888,-22.87561845779419,-22.87561845779419}},
	{{-22.85633134841919,-22.85633134841919,-0.914543628692627,-0.914543628692627}}}
	},
	{'x',{
	{{22.669701659190014,34.21533600318684,38.24410600462854,25.339002173370883}},
	{{25.341695539915587,38.24801633671977,42.27681960260069,28.01102889449676}},
	{{11.293066746002388,22.669701659190014,25.339002173370883,12.622797032045337}},
	{{12.624294038148214,25.341695539915587,28.01102889449676,13.954057040824614}},
	{{-0.00030644341445934395,11.293066746002388,12.622797032045337,-0.0003425263579440486}},
	{{-3.06037300710218e-05,12.624294038148214,13.954057040824614,-3.382733274293084e-05}},
	{{-11.293681883884924,-0.00030644341445934395,-0.0003425263579440486,-12.62348460087076}},
	{{-12.624355470415933,-3.06037300710218e-05,-3.382733274293084e-05,-13.954124943977481}},
	{{-22.670323616742195,-11.293681883884924,-12.62348460087076,-25.339697364864946}},
	{{-25.341757653248134,-12.624355470415933,-13.954124943977481,-28.011097550453503}},
	{{-34.21596955276253,-22.670323616742195,-25.339697364864946,-38.244814153077805}},
	{{-38.24807960772129,-25.341757653248134,-28.011097550453503,-42.2768895381679}}}
	}
};
CoordinateMap MapM1 = {
	{'y',{
	{{-92.32863664627075,-92.32863664627075,-70.38684892654419,-70.38684892654419}},
	{{-70.36754655838013,-70.36754655838013,-48.4257435798645,-48.4257435798645}},
	{{-92.32863664627075,-92.32863664627075,-70.38684892654419,-70.38684892654419}},
	{{-70.36754655838013,-70.36754655838013,-48.4257435798645,-48.4257435798645}},
	{{-92.32863664627075,-92.32863664627075,-70.38684892654419,-70.38684892654419}},
	{{-70.36754655838013,-70.36754655838013,-48.4257435798645,-48.4257435798645}},
	{{-92.32863664627075,-92.32863664627075,-70.38684892654419,-70.38684892654419}},
	{{-70.36754655838013,-70.36754655838013,-48.4257435798645,-48.4257435798645}},
	{{-92.32863664627075,-92.32863664627075,-70.38684892654419,-70.38684892654419}},
	{{-70.36754655838013,-70.36754655838013,-48.4257435798645,-48.4257435798645}},
	{{-92.32863664627075,-92.32863664627075,-70.38684892654419,-70.38684892654419}},
	{{-70.36754655838013,-70.36754655838013,-48.4257435798645,-48.4257435798645}}}
	},
	{'x',{
	{{16.889079031782106,25.490978747233648,29.51962383815,19.55826274599595}},
	{{19.561056625233118,29.523638466779914,33.552350575629916,22.23030302508488}},
	{{8.413084107912335,16.889079031782106,19.55826274599595,9.742704689644043}},
	{{9.744299224445435,19.561056625233118,22.23030302508488,11.073978705582324}},
	{{-0.0008830889439840641,8.413084107912335,9.742704689644043,-0.0010226540809017664}},
	{{-0.0006154481774588516,9.744299224445435,11.073978705582324,-0.0006994304931103605}},
	{{-8.41485677270303,-0.0008830889439840641,-0.0010226540809017664,-9.744757509911611}},
	{{-9.745534641710309,-0.0006154481774588516,-0.0006994304931103605,-11.075382704389074}},
	{{-16.8908713489395,-8.41485677270303,-9.744757509911611,-19.560338324529422}},
	{{-19.56230573880065,-9.745534641710309,-11.075382704389074,-22.231722589152966}},
	{{-25.492804469333073,-16.8908713489395,-19.560338324529422,-29.521738101009124}},
	{{-29.524910861219073,-19.56230573880065,-22.231722589152966,-33.553796597411456}}}
	}
};


//Additional dumb polygons to standardize Axis ranges
const std::array<Double_t, 4> shape_x = {-92.32863664627075,-92.32863664627075,92.32863664627075,92.32863664627075};
const std::array<Double_t, 4> shape_y = {-92.32863664627075,-92.22863664627075,-92.22863664627075,-92.32863664627075};
}

namespace GE11VfatPlot{
    TH1I *numerator = new TH1I("num","num",24,-0.5,23.5);
    TH1I *denominator = new TH1I("den","den",24,-0.5,23.5);
    
    void reset(){
        GE11VfatPlot::numerator->Reset("ICES");
        GE11VfatPlot::denominator->Reset("ICES");
    }
    TGraphAsymmErrors* TH1GE11 = new TGraphAsymmErrors();
}

namespace GE21VfatPlot{
    const int N_GE21MODULES = 4;
    TH1I* numerator[N_GE21MODULES] = {
        new TH1I("M1_num","M1_num",12,-0.5,11.5),
        new TH1I("M2_num","M2_num",12,-0.5,11.5),
        new TH1I("M3_num","M3_num",12,-0.5,11.5),
        new TH1I("M4_num","M4_num",12,-0.5,11.5)
    };
    TH1I* denominator[N_GE21MODULES] = {
        new TH1I("M1_den","M1_den",12,-0.5,11.5),
        new TH1I("M2_den","M2_den",12,-0.5,11.5),
        new TH1I("M3_den","M3_den",12,-0.5,11.5),
        new TH1I("M4_den","M4_den",12,-0.5,11.5)
    };
    TGraphAsymmErrors* TH1GE21[N_GE21MODULES] = {new TGraphAsymmErrors(),new TGraphAsymmErrors(),new TGraphAsymmErrors(),new TGraphAsymmErrors()};

    void reset(){
        for(int k = 0; k<N_GE21MODULES; k++){
            numerator[k]->Reset("ICES");
            denominator[k]->Reset("ICES");
        }
    }
}

/*! Returns a TH2Poly to represent the VFAT in a GEX1 chamber. For GE11 it selects between short and long chambers with chamberType = 1,2. 
    For GE21 it just returns all the modules where the VFAT are indexed as N = VFAT_Number  + (12*(Module_Number-1))
    \param uint8_t
    \return unsigned char
*/
TH2Poly* GetTH2Poly(int station , int chamberType){
    if (station != 1 && station != 2)
        throw std::runtime_error("Station must be in range [1,2] for GE11/GE21!");
    if( (station == 1 && (chamberType!=1 && chamberType!=2)))
        throw std::runtime_error("ChamberType must be in [1,2] for Short/Long respectively in GE11.");

    TH2Poly *theTH2Poly = new TH2Poly();
    CoordinateMap* coordinatePtr;
    
    if (station == 1){        
        switch (chamberType) {
        case 1:
            coordinatePtr = &GE11Geometry::MapShort;            
            break;
        case 2:
            coordinatePtr = &GE11Geometry::MapLong;
            break;
        default:
            std::cout << "Invalid chamberType for station "<<station<<"."<<std::endl;
        }
        
    for(int vfat = 0; vfat < 24; vfat++){
        int currentBin = theTH2Poly->AddBin(4,(*coordinatePtr)['x'][vfat].data(),(*coordinatePtr)['y'][vfat].data());
        theTH2Poly->SetBinContent(currentBin,0);
    }
    theTH2Poly->AddBin(4,GE11Geometry::shape_x.data(),GE11Geometry::shape_y.data()); // extra bin to keep proportions
    }// end for GE11
    
    else if (station == 2){
        
        for(int module = 1; module < 5; module++){
        
            switch (module) {
            case 1:
                coordinatePtr = &GE21Geometry::MapM1;
                break;
            case 2:
                coordinatePtr = &GE21Geometry::MapM2;
                break;
            case 3:
                coordinatePtr = &GE21Geometry::MapM3;
                break;
            case 4:
                coordinatePtr = &GE21Geometry::MapM4;
                break;
            default:
                std::cout << "Invalid chamberType for station "<<station<<"."<<std::endl;
            }

            for(int vfat = 0; vfat < 12; vfat++){
                
                int currentBin = theTH2Poly->AddBin(4,(*coordinatePtr)['x'][vfat].data(),(*coordinatePtr)['y'][vfat].data());
                theTH2Poly->SetBinContent(currentBin,0);
            }
        }// added all GE21 modules to TH2Poly
            theTH2Poly->AddBin(4,GE21Geometry::shape_x.data(),GE21Geometry::shape_y.data());// extra bin to keep proportions
    }// end for GE21
    
    theTH2Poly->SetStats(false);
    theTH2Poly->SetMaximum(1.0);
    theTH2Poly->SetMinimum(0.);
    return theTH2Poly;
}

TGraphAsymmErrors* GetTH1Plot(){
    TGraphAsymmErrors* TH1Plot = new TGraphAsymmErrors();
    TH1Plot->GetXaxis()->SetTitle("VFAT");
    TH1Plot->GetXaxis()->SetLabelSize(0.03);
    TH1Plot->GetYaxis()->SetTitle("Efficiency");
    TH1Plot->GetYaxis()->SetLabelSize(0.03);
    TH1Plot->SetMinimum(0);
    TH1Plot->SetLineColor(kBlack);
    TH1Plot->SetMarkerColor(kRed);
    TH1Plot->SetFillColorAlpha(kBlack,.4);
    TH1Plot->SetMarkerStyle(20);
    TH1Plot->SetMarkerSize(.8);
    TH1Plot->SetMaximum(1.1);
    TH1Plot->SetMinimum(0);
    return TH1Plot; 
}

#endif
